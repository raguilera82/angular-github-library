{"version":3,"file":"adapter.service.js","sourceRoot":"","sources":["../../../src/adapter.service.ts"],"names":[],"mappings":"OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB;OACvC,EAAE,UAAU,EAAE,MAAM,eAAe;OAEnC,uBAAuB;OACvB,EAAE,IAAI,EAAE,MAAM,QAAQ;AAI7B;IAEE,wBAAoB,KAAmB;QAAnB,UAAK,GAAL,KAAK,CAAc;IAAI,CAAC;IAE5C,iCAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,GAAG,CAC9B,UAAA,QAAQ;YACN,IAAI,IAAI,GAAQ,QAAQ,CAAC,IAAI,EAAE,CAAC;YAChC,IAAI,KAAK,GAAgB,EAAE,CAAC;YAC5B,IAAI,CAAC,OAAO,CAAC,UAAA,GAAG;gBACd,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,KAAK,CAAC;QACf,CAAC,CACF,CAAC;IACJ,CAAC;IAEI,yBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,6BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,YAAY,GAAG;KACrB,EAF6F,CAE7F,CAAC;IACF,qBAAC;AAAD,CAAC,AAxBD,IAwBC","sourcesContent":["import { ProxyService } from './proxy.service';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport { User } from './user';\n\n\n\nexport class AdapterService {\n\n  constructor(private proxy: ProxyService) { }\n\n  getUsers(): Observable<Array<User>> {\n    return this.proxy.getUsers().map(\n      response => {\n        let objs: any = response.json();\n        let users: Array<User> = [];\n        objs.forEach(obj => {\n          users.push(new User(obj.login, obj.avatar_url));\n        });\n        return users;\n      }\n    );\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ProxyService, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}